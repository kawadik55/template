//Собрать новый образ из файла DockerFile в папке -f
# для платформы linux/amd64
docker build -t allbots:latest -f /home/pi/js/telegram/naufa/Docker/All/Dockerfile /home/pi/js/telegram/naufa > log.txt 2>&1
# для платформы arm64 (малинка, приставка)
docker build -t allbots:arm64 -f /home/pi/js/telegram/naufa/Docker/All/Dockerfile /home/pi/js/telegram/naufa > log.txt 2>&1

//запустить контейнер с внешней командой и переменной окружения:
# для платформы linux/amd64
docker run --name user_info_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/InfoBot" kawadiyk/creatorbot:latest ./creator_bot
docker run --name user_loader_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/LoaderBot" allbots:latest ./user_loader_bot
docker run --name user_note_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/NoteBot" kawadiyk/creatorbot:latest ./creator_bot
docker run --rm --name user_parser -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/Parser" allbots:latest ./user_parser
docker run --rm --name user_rassilka -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/Rassilka" allbots:latest ./user_rassilka

docker run --name pso_info_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/InfoBot" kawadiyk/creatorbot:latest ./creator_bot
docker run --name pso_loader_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/LoaderBot" allbots:latest ./pso_loader_bot
docker run --rm --name pso_rassilka -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/Rassilka" allbots:latest ./pso_rassilka

# для платформы arm64 (малинка, приставка)
docker run --name user_info_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/InfoBot" kawadiyk/creatorbot:latest ./creator_bot
docker run --name user_note_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/NoteBot" kawadiyk/creatorbot:latest ./creator_bot
docker run --name user_loader_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/LoaderBot" allbots:arm64 ./user_loader_bot
docker run --rm --name user_parser -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/Parser" allbots:arm64 ./user_parser
docker run --rm --name user_rassilka -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/user/Rassilka" allbots:arm64 ./user_rassilka

docker run --name pso_info_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/InfoBot" kawadiyk/creatorbot:arm64 ./creator_bot
docker run --name pso_loader_bot -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw --restart=unless-stopped -d -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/LoaderBot" allbots:arm64 ./pso_loader_bot
docker run --rm --name pso_rassilka -v /home/pi/js/telegram/naufa:/home/pi/js/telegram/naufa:rw -t -e "CURRENT_DIR=/home/pi/js/telegram/naufa/pso/Rassilka" allbots:arm64 ./pso_rassilka

// Полезные команды
docker stop info_bot			- остановит контейнер
docker restart info_bot			- перезапустит контейнер (после остановки, например)
docker rm info_bot				- удалит контейнер
docker rmi infobot:arm64		- удалит образ
docker system prune -a			- почистить все
docker stats --all				- статистика контейнеров
docker system df				- инфа о занимаемом пространстве
docker builder prune			- очистка кэша билдера
docker container inspect loader_bot

