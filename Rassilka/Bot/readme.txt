При наличии FullLoaderBot этот скрипт становится ненужным.

Этот скрипт следует использовать только вместе с ботом-загрузчиком (loader_bot).
rassilka.js - скрипт для рассылки контента по группам и каналам, которые настроены. В каждом получателе контента (канал/группа)
должен находится бот-публикатор из файла Token/news_bot.json с правами админа канала/группы, через него будет происходить 
публикация контента в канале/группе. Список chatId каналов/групп должен находится в поле "chat_news" в файле /Token/chatId.json.
Например:
....
"chat_news":
 {"chat_annovosti":"-1001754213738",
  "chat_NaOkt":"-1001505518619"
 }
Текст и картинки (флаеры, файлы) для рассылки бот берет из папки /LoaderBot, Ежик и расписание - из своего корня.
Публикация контента от LoaderBot будет производится в соответствии с установленной при загрузке периодичностью. Периодичность
может быть по дням недели, ежедневно и по дате начала мероприятия. Если была выбрана периодичность 'по Дате', то публикация такого контента будет
происходить тем чаще, чем ближе дата события.

Файлы настройки:
- buttons.txt - объект кнопок reply_markup, которые могут быть добавлены в пост с расписанием. Кнопки имеют ссылки
на желаемые ресурсы. Если этот объект пустой или отсутствует, то кнопки добавлены не будут.
- run.txt - включает или выключает типы постов.
"Text": true, - публиковать или нет текстовые сообщения;
"Image": true, - публиковать или нет картинки и файлы; 
"Eg": false, - публиковать или нет Ежик на сегодня;
"Raspis": true	- публиковать или нет Расписание на сегодня;

Если выбраны Ежик и Расписание, то файлы с этими текстами должны уже лежать в корне папки бота.

Скрипт должен запускаться после отработки parser.js, что достигается правильным расписанием запуска скриптов в crontab.

Перед запуском скрипта необходимо заполнить файл Token/news_bot.json с токеном бота, а также вписать в Token/chatId.json правильные
chat_id группы/канала, где этот бот дежурит.

Готовый образ для Докера "kawadiyk/rassilka:latest" можно загрузить из DockerHub.
Запускать контейнер можно из crontab по нужному расписанию, с помощью команды:

00 06 * * * docker run --rm --name rassilka -v ДОМ/РЕГИОН:/home/pi/РЕГИОН:rw -t -e "CURRENT_DIR=/home/pi/РЕГИОН/БОТ" kawadiyk/rassilka:latest ./rassilka >> ДОМ/РЕГИОН/log/cronlog.txt  2>&1

Этот пример будет запускать рассылку ежедневно в 06:00
ДОМ - домашний каталог пользователя, например: /home/anton
РЕГИОН - папка с ботами, например: Moscow
БОТ - папка с ботом, например: InfoBot
В результате ДОМ/РЕГИОН/БОТ = /home/anton/Moscow/InfoBot
  